select 
 e.*, 
 (case when m.size = 'OS' then 'OS' else 'NOT OS' end) SFS, m.style, m.color, m.size, 
 (case when pm_qty < qty_needed then 'Urgent'
  when pm_qty = qty_needed then 'Demand'
  else 'Proactive' end) replen_status 
from 
 (
  select  *,
   (CASE
     WHEN runningTotal <= qty_needed  OR (rowNumber = 1 AND (runningTotal > (qty_needed))) THEN 'PULL'
	 WHEN runningTotal > qty_needed THEN 'DELETE'
    ELSE 'DELETE' END
   ) AS 'replen' 
  from
  (
   SELECT *, 
    SUM (actual_qty) OVER (PARTITION BY item_number ORDER BY rowNumber) AS runningTotal 
   from
   (
    select 
     b.item_number, order_qty, picked_qty, b.qty_needed, pm_qty, bs_qty, scrb_qty, stg_qty, total_qty,
	 i.location_id, i.hu_id, i.actual_qty, i.status, i.type,
	 ROW_NUMBER () OVER ( PARTITION BY i.item_number ORDER BY i.item_number DESC, i.location_id ASC ) AS 'rowNumber'
    from
    (
	 select 
	  item_number, order_qty, picked_qty, order_qty - picked_qty qty_needed, pm_qty, bs_qty, scrb_qty, stg_qty,
      pm_qty + bs_qty + scrb_qty + stg_qty total_qty 
	 from
     (
	  select 
       d.item_number, 
       count(d.qty) order_qty, 
       sum(p.picked_quantity) picked_qty,
		isnull((
		  SELECT sum(isnull(pm.actual_qty,0)) AS pm_qty
		  FROM t_stored_item pm (nolock)
		  WHERE type = '0'  
		  AND (location_id LIKE 'AA%' OR location_id LIKE 'AB%' OR location_id LIKE 'AC%' OR location_id LIKE 'AD%') 
		  AND pm.item_number = d.item_number
		  GROUP BY item_number
		  ), 0) pm_qty,
		 isnull((
		  SELECT sum(isnull(actual_qty,0)) AS bs_qty
		  FROM t_stored_item bs (nolock)
		  WHERE type = '0' 
		  AND (location_id LIKE 'BS%')
		  AND bs.item_number = d.item_number
		  GROUP BY item_number
		 ),0) bs_qty,
		 isnull((
		  SELECT sum(isnull(actual_qty,0)) AS scrb_qty
		  FROM t_stored_item scrb (nolock)
		  WHERE type = '0' 
		  AND (location_id LIKE 'SC%'
		  OR location_id LIKE 'SV%'
		  OR location_id LIKE 'RB%') 
		  AND scrb.item_number = d.item_number
		 GROUP BY item_number
         ),0) scrb_qty,
		 isnull((
		  SELECT sum(isnull(actual_qty,0)) AS stg_qty
		  FROM t_stored_item stg (nolock)
		  WHERE type = '0' 
		  AND (location_id LIKE 'CP%'
		  OR location_id LIKE 'OS%'
		  OR location_id LIKE 'RCV%'
		  OR location_id LIKE 'RESTOCKER%'
		  OR location_id LIKE 'CART%'
		  OR location_id LIKE 'SFS%'
		  OR location_id LIKE 'REC%'
		  OR location_id LIKE 'TRANS%'
		  OR location_id LIKE 'INV%')
		  AND stg.item_number = d.item_number
		  GROUP BY item_number
		 ),0) stg_qty
        from t_order o (nolock)
		join t_order_detail d (nolock) on d.order_number = o.order_number
		join t_pick_detail p (nolock) on p.order_number = o.order_number and p.line_number = d.line_number and p.item_number = d.item_number and p.status not in ('CANCELLED')
		where cast(order_date as date) >= '2020-08-10' -- Date for focus or all
		and o.status NOT IN ('SHIPPED','CANCELLED','PACKED','LOADED','S', 'PROCESSING', 'SHIPPING') 
		--and wcs_status in ('A', 'R', 'M', 'P', 'S', 'C')  --All Cofe
		--and wcs_status in ('A') --Cofe Pending
		--and wcs_status in ('R', 'M', 'P', 'S', 'C') --Cofe Active Pool
		--and wcs_status in ('M','S') --Cofe Matching
        group by d.item_number
        having (sum(d.qty) - sum(p.picked_quantity)) > 0
		) a
     where bs_qty > 0 and pm_qty - 10 < (order_qty - picked_qty)
	  ) b
     join t_stored_item i (nolock) on i.item_number = b.item_number and i.type = '0' AND (i.location_id LIKE 'BS%')
	 ) c
	) d
where (CASE
        WHEN runningTotal <= qty_needed  OR (rowNumber = 1 AND (runningTotal > (qty_needed))) THEN 'PULL'
        WHEN runningTotal > qty_needed THEN 'DELETE'
        ELSE 'DELETE' END) <> 'DELETE'
   ) e
join t_item_master m (nolock) on m.item_number = e.item_number
ORDER BY replen_status desc, e.item_number, rowNumber
